W tej lekcji ponownie uzyjemy contextu.
Uzyjemy go do manipulacji stanu loggedIn, ktory zadeklarowalismy a komponencie App.tsx

1. App.tsx
    a. Abysmy mogli manipulowac stanem loggedIn z dowolnego komponentu,
        musimy udostepnic metode setLoggedIn. 
        Aby to zrobic, dodajemy ja do wartosci providera - 
        <ExampleContext.Provider value={{addFlashMessage, setLoggedIn}}>

        W tej chwili zepsulismy ogike dzialania dla 
        const addFlashMessage: any = useContext(ExampleContext) 
        w pliku CreatePost.tsx.

        Aby to naprawic musimy zderstrukturyzowac useContext(ExampleContext),
        poniewaz jego value to juz nie pojedyncze value={addFlashMessage} 
        a obiekt z dwoma wartosciami - value={{addFlashMessage, setLoggedIn}}

        W tym celu przechodzimy do CreatePost.tsx
    
2. CreatePost.tsx
    b. Stala const addFlashMessage: any = useContext(ExampleContext);
        zmieniamy na const { addFlashMessage }: any = useContext(ExampleContext)
        czyli destrukturyzujemy, poniewaz nie pobiera ona juz pojedyczej wartosci

Teraz mozemy dzialc dalej nad zaimplementowaniem setLoggedIn

3. Header.tsx
    c. Z tagow HederLoggedIn i HederLoggedOut usuwamy propsy setLoggedIn
        Czyli zamiast
        {props.loggedIn ? (
          <HederLoggedIn setLoggedIn={props.setLoggedIn} />
        ) : (
          <HeaderLoggeOut setLoggedIn={props.setLoggedIn} />
        )} 
        pozostawiamy 
        {props.loggedIn ? <HederLoggedIn /> : <HeaderLoggeOut />}

Teraz zeby zamiast uzycia setLoggedIn uzyc context, musimy zaimplementowac context w komponentach: HederLoggedIn i HederLoggedOut

3. HederLoggedIn.tsx
    d. Importujemy useContext oraz ExampleContext
    e. Deklarujemy dostep do metody setLoggedIn
        const { setLoggedIn } = useContext(ExampleContext);
    f. W metodzie handleLogout, w props.setLoggedIn(false) usuwamy props, poniewaz nie przekazujemy
        juz dostepu przez props a przez context

4. HederLoggedOut.tsx
    g. Robimy to co w pliku HederLoggedIn.tsx
    
